{"meta":{"title":"Emt","subtitle":"EMTの博客","description":"一个啥都不会的小菜鸡","author":"Emt","url":"https://amlyt.github.io","root":"/"},"pages":[{"title":"archives","date":"2019-10-24T16:00:00.000Z","updated":"2021-06-27T12:40:24.587Z","comments":true,"path":"archives/index.html","permalink":"https://amlyt.github.io/archives/index.html","excerpt":"","text":""},{"title":"关于本站","date":"2020-04-19T04:58:56.000Z","updated":"2022-04-21T04:06:35.736Z","comments":false,"path":"about/index.html","permalink":"https://amlyt.github.io/about/index.html","excerpt":"","text":"EMTの博客“ 认识自我、超越自我 “ 那么你离成功就又进了一步！ 当你在项目中感觉所要学习的人和事越来越多时，说明你在 成长 。 当你感觉要责怪的人和事越来越少时，说明你在 成熟 。 当你在项目中不断获得了友谊和朋友时，说明你将取得项目的 成功 。 联系我QQ：2385689412"},{"title":"留言板","date":"2020-10-31T02:11:28.000Z","updated":"2021-11-23T10:50:01.880Z","comments":false,"path":"comments/index.html","permalink":"https://amlyt.github.io/comments/index.html","excerpt":"","text":""},{"title":"分类","date":"2020-11-24T07:12:19.000Z","updated":"2021-07-26T14:44:28.785Z","comments":false,"path":"categories/index.html","permalink":"https://amlyt.github.io/categories/index.html","excerpt":"","text":""},{"title":"我的歌单","date":"2019-05-17T08:14:00.000Z","updated":"2022-04-11T11:23:55.342Z","comments":true,"path":"music/index.html","permalink":"https://amlyt.github.io/music/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-06-07T14:17:49.000Z","updated":"2021-07-27T07:31:10.990Z","comments":true,"path":"link/index.html","permalink":"https://amlyt.github.io/link/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-11-24T07:14:39.000Z","updated":"2021-07-26T14:44:42.337Z","comments":false,"path":"tags/index.html","permalink":"https://amlyt.github.io/tags/index.html","excerpt":"","text":""},{"title":"相册","date":"2022-01-01T13:48:19.476Z","updated":"2021-10-14T02:13:24.113Z","comments":false,"path":"List/gallery/index.html","permalink":"https://amlyt.github.io/List/gallery/index.html","excerpt":"","text":"壁紙 世俗的欲望 OH MY GIRL 關於OH MY GIRL的圖片"},{"title":"","date":"2019-08-10T08:41:10.000Z","updated":"2021-07-26T07:32:29.746Z","comments":false,"path":"List/movies/index.html","permalink":"https://amlyt.github.io/List/movies/index.html","excerpt":"","text":"励志视频"},{"title":"","date":"2020-04-23T04:58:56.000Z","updated":"2022-04-11T11:05:22.931Z","comments":false,"path":"List/music/index.html","permalink":"https://amlyt.github.io/List/music/index.html","excerpt":"","text":""},{"title":"","date":"2021-09-28T14:56:14.000Z","updated":"2021-09-28T16:44:43.445Z","comments":false,"path":"List/gallery/ohmygirl/index.html","permalink":"https://amlyt.github.io/List/gallery/ohmygirl/index.html","excerpt":"","text":""},{"title":"","date":"2021-09-28T14:56:13.000Z","updated":"2021-10-14T02:11:35.135Z","comments":false,"path":"List/gallery/wallpaper/index.html","permalink":"https://amlyt.github.io/List/gallery/wallpaper/index.html","excerpt":"","text":""}],"posts":[{"title":"第一章","slug":"计算机网络自顶向下","date":"2022-04-19T16:00:00.000Z","updated":"2022-04-22T07:27:11.374Z","comments":true,"path":"posts/9dece749.html","link":"","permalink":"https://amlyt.github.io/posts/9dece749.html","excerpt":"","text":"前言为了锻炼自己看书的习惯，和看书抓重点的能力，也自己日后复习，特地写下学习笔记以便自己查看，也欢迎各位来共同学习和交流。 参考书籍：《计算机网络自顶向下方法》原书第七版 参考博客:计算机网络自顶向下方法(一)——计算机网络和因特网 - CharlesLC - 博客园 (cnblogs.com) 参考视频:中科大郑烇、杨坚全套《计算机网络（自顶向下方法 第7版，James F.Kurose，Keith W.Ross）》课程_哔哩哔哩_bilibili 注:本人是先看了书，如何对着大佬的播客进行排版，内容的更正，以及漏掉的地方重新看一遍，然后写完了，又看了遍视频，可能写的很啰嗦，书本上的多一点，忘记的概念，和不太清楚的概念写上去了，视频的明白的地方就没写上去。 什么是因特网因特网是一个世界范围的计算机网络，即它是一个互联了遍及全世界计算设备的网络。 因特网具体构成及描述所有使用网络的计算设备都称为主机(host)或端系统(end system)。 主机通过通信链路(communication link)和分组交换机(packet switch)连接到一起。 通信链路: 同轴电缆，铜线，光纤，无限电频谱….. 链路的传输速率(transmit rate)=比特/秒(bit/s,或bps) 分组: 当一台主机向另一台主机发送数据时，发送主机将数据分段，并将每段数据加上首部字节,这叫分组(packet)。 这些分组发送到目的地主机，被装配成初始数据。 分组交换机: 转发分组 路由器(router):网络核心中 链路层交换机(link-layer switch):接入网中 主机通过因特网服务商接(ISP)入因特网 从服务角度来描述因特网分布式应用程序: 涉及多个交换交互数据的主机，例如WEB、Voip、email、分布式游戏、电子商务、社交网络… 因特网应用程序运行在主机上，但并不运行在路由器中，路由器并不在意应用程序，这时套接字接口可以进行交付数据。 套接字接口(socket interface): 该接口规定了运行在主机的程序请求因特网的基础设施向运行在另一个主机的特定目的地程序交付数据的方式。 什么是协议?协议:控制因特网中信息的接受与发送 协议(protocol)定义了在两个或多个通信实体之间交换的报文的格式和顺序，以及报文发送和/或接收一条报文或其他事件所采取的动作。 PDU:协议数据单元 假设用人类协议来说明: 双方都遵循协议的情况下,几点了?发送请求(resquest),2:00 对方回应(response) 网络协议: Internet中所有通信行为都受协议制约。 计算机中的协议，例如:HTTP,TCP/IP,FTP,SMTP,PPP 网络边缘:因为计算设备位于因特网的边缘，故而被称为端系统。 端系统也称为主机（host）,因为它们容纳（即运行）应用程序 应用程序: 如Web浏览器程序、Web服务器程序、电子右键客户程序或电子右键服务器程序…… 主机： 客户机(client)、服务器(server) 客户机通常是桌面PC、移动PC和智能手机 服务器通常是更为强大的机器、用于存储和发布Web页面、流视频、中继电子右键等。 逻辑上客户机和服务器相互传输，物理上，客户机和服务器经过多层协议的封装和抽象才能相互传输，例如套接字接口就是SOCKET用于在两个基于TCP/IP协议的应用程序之间相互通信。 接入网:接入网是指将主机物理连接到边缘路由器(edge router)的网络。 边缘路由器: 将主机连接到任何其他主机的第一台路由器。 家庭接入：DSL、电缆、FTTH、拨号和卫星。 宽带住宅接入两种流行的类型:数字用户线(DSL,Digital Subscriber Line)、电缆。 DSL: DSL-电话公司的的基础设施，此时当使用DSL时，用户的本地电话公司也是它的ISP。 每个用户的DSL调制解调器使用现有的电话线(双铜绞线)与本地中心局(CO)中的数字用户接入线复用器(DSLAM)交换数据。 家庭的调制解调器收到数字数据转化为模拟信号，在DSLAM处转化为数字形式。 调制解调器把数据信号和电话信号分开，用户一方将数据信号发送给调制解调器，电话公司一方将数据信号发送给因特网。 DSL定义了多个不同的传输速率，上行传输速率小于下行。 目前常见的DSL有两种形式： SDSL： 对称数字用户线路（SDSL）的上传速度和下载速度相同 ADSL: 非对称数字用户线路（ADSL）的下载速度高于上传速度。 ADSL较SDSL更经济。ADSL从某种意义上说,是为家庭用户设计的。 除此之外还有其他很多种DSL，以及新兴的VDSL，是非对称数字用户线路最快的，与以太网结合，让宽带客户体验到了速度快的宽带接入方式，可自行下去了解，这里不多作说明。 电缆因特网: 电缆因特网(CIA,cable Internet access)-有线电视公司的电视基础设施。","categories":[{"name":"网络安全","slug":"网络安全","permalink":"https://amlyt.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"},{"name":"计算机网络在自顶向下","slug":"网络安全/计算机网络在自顶向下","permalink":"https://amlyt.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9C%A8%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B/"}],"tags":[]},{"title":"第一节","slug":"路由01-","date":"2022-04-19T16:00:00.000Z","updated":"2022-04-22T07:28:35.275Z","comments":true,"path":"posts/e0a70cfa.html","link":"","permalink":"https://amlyt.github.io/posts/e0a70cfa.html","excerpt":"","text":"PPP协议:PPP是 Point-to-Point Protocol的简称，也叫做P2P，目前是TCP/IP网络中最重要的点到点数据链路层协议。 主要包括链路控制协议（LCP）和网络控制协议（NCP）。 LCP：链路控制协议(Link Control Protocol)用于建立，配置和检测数据链路连接的连接控制协议。 主要用于数据链路连接的建立、拆除和监控；LCP主要完成MRU（最大传输单元）、质量协议、验证协议、魔术字、协议域压缩、地址和控制域压缩协商等参数的协商； NCP:网络层控制协议(Network Control Protocol)对于IPv4，NCP被称为IP控制协议（IPCP） 对于IPv6，NCP被称为IPV6CP。 在LCP完成链路建立和认证之后，该链路每端都进入网络状态，并使用一个或者多个NCP进行网络层的相关协商。 NCP用于建立和配置不同网络层协议的网络控制协议协议簇，主要用于协商在该链路上所传输的数据包的格式与类型。 PPP五种状态： Dead:(链路不可用阶段) LCP状态机有两个状态：Initial和Starting。从这个状态迁移到Establish状态会给LCP状态机送一个Up事件。当断开连接后，链路会自动的回到这个状态。在一般情况下这个阶段是很短的，仅仅只是检测到设备在线。 (change status to up)现在是up状态 Establish:(链路建立阶段) 该阶段PPP链路将进行LCP参数协商，协商内容包括最大接收单元MRU、认证方式、魔术字（Magic Number）等选项。LCP参数协商成功后会进入Opened状态，表示底层链路已经建立。 Authenticate:(验证阶段): 某些链路可能要求对端验证自己之后才允许网络层协议数据包在链路上传输，在默认值中验证是不要求的。如果某个应用要求对端采用特定的验证协议进行验证，则必须在链路建立阶段发出使用这种协议的请求。只有当验证通过时才可以进入网络层协议阶段，如果验证不通过，则应继续验证而不是转到链路终止阶段。在这个阶段只允许链路控制协议、验证协议和链路质量检测的数据包进行传输，其他的数据报都应丢弃。 LCP这四次便是验证阶段。 Network-Layer Protocol（网络层协议阶段）:该阶段PPP链路将进行NCP协商。通过协商来选择和配置一个网络层协议及相关参数。只有相应的网络层协议协商成功后，才可以通过这条PPP链路发送报文。NCP协商成功后，PPP链路将保持通信状态。 Link Terminate（链路终止阶段): 这里没试验，回去可自己试验。 PPP的层次模型： 关于PPP的帧格式： LCP帧格式 关于PPP帧格式的介绍 标志字段F=0x7E（01111110），定界符 如果0x7E出现在帧内部的话，需要出现问题，所以有两种解决方案： 在异步链路上使用字符填充，即把0x7E用0x7D5E替换 在同步链路上使用位填充，即在连续的5个1之后填充一个0 地址字段A：用于指定那个站正在处理，但是PPP只关心一个站，所以设置了0xFF（所有站） 控制字段C：用于帧序列和重传行为，PPP中没有用，设为固定值0x03 协议（指示在信息字段中封装的数据类型）： 0x0021时，数据部分是IP数据报。 0xC021时,数据部分是LCP数据（链路控制协议）。 0x8021时，数据部分是NCP（网络控制协议）数据。 0xC023 时，数据部分是PAP数据。 0xC025时： LCP中链路质量报告LQR 0xC223 时，数据部分是CHAP数据 数据部分 最大长度不能超过1500字节，1500字节大小等于PPP协议中配置参数选项MRU FCS（校验）: 用于差错检测的冗余循环校验码 作业1：抓取MRU,Magic Number: 代码如下： 对两个路由器进行配置 R1： sy #进入系统试图 sy R1 #更改路由名称为R1 interface serial 0/0/1 #进入S0/0/1接口ip address 10.10.10.1 24 #配置ip地址 A类掩码为24,B类,16，C类，8link-protocol ppp #串口使用ppp协议。 R2: sy #进入系统试图 sy R2 #更改路由名称为R2 interface serial 0/0/1 #进入S0/0/2接口ip address 10.10.10.2 24link-protocol ppp 查看路由表： dis ip routing-table 路由表是(routing-table) 查看接口就是: dis int s0/0/1 作业二2：为什么确认两次还要IPCP确认两次？ 计算机网络自顶向下方法(一)——计算机网络和因特网 - CharlesLC - 博客园 (cnblogs.com) IP控制协议（IPCP）负责建立，使能和中止IP模块。IPCP和LCP协议使用相同的包交换机制。IPCP包在PPP没有达到网络层协议阶段以前不能进行交换，如果有IPCP包在到达此阶段前到达会被抛弃。IPCP和LCP基本相同，除了以下几点： 数据链路层协议域方面。一个IPCP包被包括在PPP数据链路层帧的信息域内，在帧中的协议域会有指示类型的数值8021。编码域仅用到编码1到7。其它编码被认为是不可识别而被抛弃。超时方面。IPCP包在PPP没有到达网络层协议以前不能交换。在实现中应该在未接收到配置确认或其它响应前准备等待认证和链接质量决定的完成。实现中应该保证连接在除用户干扰或超的其它情况下不得中断。配置选项类型方面。IPCP有不同的配置选项集合，在下面会具体谈到。 2.1. 发送IP数据报 在进行IP包通信前，PPP必须达到网络层协议阶段，IPCP必须到达打开状态。在PPP数据链路层帧的信息域中包括了一个IP包，帧中的协议域指示了类型值0021。在PPP连接上传送IP包的最大长度和PPP数据链种层帧的信息域的最大长度一致。过大的IP数据报必须被重新分段。如果系统不希望分段重组就必须使用TCP最大段大小选项和MTU发现。 PPP两种认证方式:PAP:一端发送明文口令至对等端，由对方认证，特性:铭文传输，不安全。 PAP包格式 CHAP:双方都把随机数+密码通过散列函数来运算，所以网络上只会看到杂凑的函数种类及随机数，不会看到密码，安全性很高。 CHAP认证过程 CHAP包格式 CHAP认证过程报文交换过程 PPPOE协议PPP 协议要求进行通信的双方之间是点到点的关系，不适于广播型的以太网和另外一些多点访问型的网络，于是就产生了PPPOE协议。PPPOE不仅为使用桥接以太网接入的用户提供了一种宽带接入手段，同时还能提供方便的接入控制和计费 PPPoE报文 VER：固定为1； TYPE：固定为1； CODE： 发现阶段： 0x09 PADI：PPPOE Active Discovery Initiation 0x07 PADO：PPPOE Active Discovery Offer 0x19 PADR：PPPOE Active Discovery Request 0x65 PADS:PAD Session-confirmation 0xa7 PADT:PPPOE Active Discovery Terminate 会话阶段： 0x00 Session ID：PPP会话的唯一标识。","categories":[{"name":"路由交换","slug":"路由交换","permalink":"https://amlyt.github.io/categories/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2/"},{"name":"广域网技术","slug":"路由交换/广域网技术","permalink":"https://amlyt.github.io/categories/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2/%E5%B9%BF%E5%9F%9F%E7%BD%91%E6%8A%80%E6%9C%AF/"}],"tags":[]},{"title":"第三课","slug":"小迪03-","date":"2022-04-18T16:00:00.000Z","updated":"2022-04-21T04:43:40.124Z","comments":true,"path":"posts/5a33ef10.html","link":"","permalink":"https://amlyt.github.io/posts/5a33ef10.html","excerpt":"","text":"第三课Fiddler:是一个http协议调试代理工具，它能够记录并检查你的电脑和互联网之间的http通讯，设置断点。 Charles:是一个http代理服务器，http监视器，反转代理服务器。 TcpDump:是可以将网络中传送的数据包完全截获下来提供分析。它支持对网络层，协议，网络或端口的过滤，并提供and,or,not逻辑语句来帮助你去掉无用的信息。 BurpSuite:是用于攻击web应用程序的继承平台，包含了许多工具，许多接口，所有工具都能共享一个请求。 Wireshark:是一个网络封包分析软件，功能是截取网络封包，并尽可能显示出最为详细的网络封包资料。Wireshark使用WinPCAP作为接口，直接与网卡进行数据报文交换。基本所有协议都能抓到 科来网络分析系统：拥有全部知识产品的网络分析产品。该系统具有行业领先的专家分析技术，通过捕获分析网络中传输的底层数据包，对网络故障，网络安全以及网络性能进行全面分析，从而排查网络中出现或潜在的故障，安全及性能问题。 WPE&amp;封包分析:强大的网络封包编辑器，wpe可以截取网络上的信息，修改封包软件，是外挂制作的常用工具，一般在安全测试中可用俩调试数据通讯地址。","categories":[{"name":"网络安全","slug":"网络安全","permalink":"https://amlyt.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"},{"name":"小迪","slug":"网络安全/小迪","permalink":"https://amlyt.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA/"}],"tags":[]},{"title":"第二课","slug":"小迪02-","date":"2022-04-16T16:00:00.000Z","updated":"2022-04-21T04:43:36.483Z","comments":true,"path":"posts/172d4c42.html","link":"","permalink":"https://amlyt.github.io/posts/172d4c42.html","excerpt":"","text":"第二课","categories":[{"name":"网络安全","slug":"网络安全","permalink":"https://amlyt.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"},{"name":"小迪","slug":"网络安全/小迪","permalink":"https://amlyt.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA/"}],"tags":[]},{"title":"第一课","slug":"小迪01-","date":"2022-04-15T16:00:00.000Z","updated":"2022-04-22T05:02:30.439Z","comments":true,"path":"posts/1.html","link":"","permalink":"https://amlyt.github.io/posts/1.html","excerpt":"","text":"第一课WAF 网站应用防火墙，专们用来对网站上的应用进行防护 电脑不同用户的权限不一样，不同目录下的权限也不一样 防火墙内网下的机器通过互联网上外网，外网要找到这台机器，要通过内网去找，内网的ip不具有唯一性，所以找不到，如果你要控制阿里云(外网)，可以控制，但是他这边回显给不到你，除非建立管道。 本机获得的ip是内网ip，你访问公网的ip，人家获得的是你外网的ip。 当你外网想监听内网下的ip地址，这时你监听外网地址，是只监听出口地址，监听内网地址呢，内网这么多地址，咋找到你公网地址下的这个地址？这时候，就得用到路由器的端口转发（让阿里云找到路由器接口，让路由器接口找到主机），这时，比如你是阿里云去找内网下的机器，让阿里云去找到这个接口地址，然后做个策略，去找到做个主机就行了 端口转发：https://blog.csdn.net/m0_53183089/article/details/114848549?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1.pc_relevant_antiscanv2&amp;spm=1001.2101.3001.4242.2&amp;utm_relevant_index=4 实验实验1:用反弹获取其他机器的ip。 2","categories":[{"name":"网络安全","slug":"网络安全","permalink":"https://amlyt.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"},{"name":"小迪","slug":"网络安全/小迪","permalink":"https://amlyt.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA/"}],"tags":[]}],"categories":[{"name":"网络安全","slug":"网络安全","permalink":"https://amlyt.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"},{"name":"计算机网络在自顶向下","slug":"网络安全/计算机网络在自顶向下","permalink":"https://amlyt.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9C%A8%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B/"},{"name":"路由交换","slug":"路由交换","permalink":"https://amlyt.github.io/categories/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2/"},{"name":"广域网技术","slug":"路由交换/广域网技术","permalink":"https://amlyt.github.io/categories/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2/%E5%B9%BF%E5%9F%9F%E7%BD%91%E6%8A%80%E6%9C%AF/"},{"name":"小迪","slug":"网络安全/小迪","permalink":"https://amlyt.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E5%B0%8F%E8%BF%AA/"}],"tags":[]}